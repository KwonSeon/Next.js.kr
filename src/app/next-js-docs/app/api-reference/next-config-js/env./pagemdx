---
title: env
description: 빌드 시 Next.js 애플리케이션에서 환경 변수를 추가하고 접근하는 방법을 알아보세요.
---

> [Next.js 9.4](https://nextjs.org/blog/next-9-4)의 릴리즈부터 더 직관적이고 인체공학적으로 [환경 변수를 추가](/docs/pages/building-your-application/configuring/environment-variables)할 수 있게 되었습니다. 사용해 보세요!

<details>
  <summary>예시</summary>

- [With env](https://github.com/vercel/next.js/tree/canary/examples/with-env-from-next-config-js)

</details>

> **참고**: 이러한 방식으로 지정된 환경 변수는 **항상** 자바스크립트 번들에 포함되며, 환경 변수 이름 앞에 `NEXT_PUBLIC_`을 붙이면 [환경 또는 .env 파일을 통해](/docs/pages/building-your-application/configuring/environment-variables) 지정된 경우에만 영향을 미칩니다.

자바스크립트 번들에 환경 변수를 추가하기 위해서 `next.config.js` 파일을 열고 `env` 설정을 추가합니다.

```js filename="next.config.js"
module.exports = {
  env: {
    customKey: 'my-value',
  },
}
```

이제 아래와 같이 코드에서 `process.env.customKey` 에 접근할 수 있습니다.

```jsx
function Page() {
  return <h1>The value of customKey is: {process.env.customKey}</h1>
}

export default Page
```

Next.js는 빌드 시 `process.env.customKey`를 `'my-value'`로 바꿉니다. 웹팩에서 제공하는 [DefinePlugin](https://webpack.kr/plugins/define-plugin/)으로 인해 `process.env` 변수는 구조 분해되지 않습니다.

예를 들어 다음의 코드는

```jsx
return <h1>The value of customKey is: {process.env.customKey}</h1>
```

아래와 같이 바뀝니다.

```jsx
return <h1>The value of customKey is: {'my-value'}</h1>
```
